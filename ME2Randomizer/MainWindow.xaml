<Controls:MetroWindow xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:converters="clr-namespace:RandomizerUI.Classes.Converters"
                      xmlns:fonts="clr-namespace:RandomizerUI.fonts"
                      xmlns:randomizerUi="clr-namespace:RandomizerUI"
                      xmlns:classes1="clr-namespace:RandomizerUI.Classes"
                      xmlns:randomizers="clr-namespace:Randomizer.Randomizers;assembly=Randomizer"
                      xmlns:targets="clr-namespace:ME3TweaksCore.Targets;assembly=ME3TweaksCore"
                      xmlns:mer="clr-namespace:Randomizer.MER;assembly=Randomizer"
                      x:Class="RandomizerUI.MainWindow" 
                      IconScalingMode="ScaleDownLargerFrame" 
                      mc:Ignorable="d" 
                      Loaded="MainWindow_Loaded" 
                      Title="{Binding WindowTitle}" 
                      MinWidth="1280"
                      Height="700"
                      MinHeight="900"
                      DataContext="{Binding RelativeSource={RelativeSource Self}}"
                      WindowStartupLocation="CenterScreen"
                      Width="1280">
    <Window.Resources>
        <converters:EnumMatchToBooleanConverter x:Key="enumConverter" />
        <converters:FaceFXRandomizationLevelIntToStringConverter x:Key="FaceFXRandomizationLevelIntToStringConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <converters:DangerColorConverter x:Key="DangerColorConverter"/>
        <converters:DangerTextConverter x:Key="DangerTextConverter"/>
        <converters:ImplementedConverter x:Key="ImplementedConverter"/>

        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox}">
            <Style.Resources>
                <SolidColorBrush x:Key="HighlightBrush" Color="White" />
            </Style.Resources>
        </Style>

        <DataTemplate x:Key="RandomizationOptionTemplate" DataType="randomizers:RandomizationOption">
            <StackPanel Name="OptionContainer">
                <CheckBox Content="{Binding HumanName}" FontWeight="Bold" Margin="3" 
                          IsChecked="{Binding OptionIsSelected}"
                          Controls:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                          Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="White"
                          Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"
                          />
                <TextBlock Text="{Binding Description}" TextWrapping="Wrap" MaxWidth="200" 
                           HorizontalAlignment="Left" FontSize="10" Margin="3,-3,0,0"
                           Visibility="{Binding Description, Converter={StaticResource NullVisibilityConverter}}"
                           PreviewMouseUp="ROClickHACK_Click"
                           Foreground="{Binding Dangerousness, Converter={StaticResource DangerColorConverter}}"/>
                <StackPanel  Visibility="{Binding SetupRandomizerDelegate, Converter={StaticResource NullVisibilityConverter}}"
                            Margin="20,0,0,0">
                    <Button Content="{Binding SetupRandomizerButtonText}" 
                                ToolTip="{Binding SetupRandomizerButtonToolTip}" Style="{StaticResource MahApps.Styles.Button.Dialogs.Accent}" 
                                Command="{Binding SetupRandomizerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=randomizerUi:MainWindow}}" 
                                CommandParameter="{Binding}"
                                Padding="20,3" HorizontalAlignment="Right" Margin="0,3"  MinHeight="0" MinWidth="0"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OptionIsSelected}" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,1,0,0" Visibility="{Binding ShowLabels, RelativeSource={RelativeSource FindAncestor, AncestorType=randomizerUi:MainWindow}, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border 
                        ToolTip="This option is considered more for 'fun' than seriousness"
                        Background="Indigo" Padding="4,0" Margin="2,0,0,0" Visibility="{Binding GoodTimeRandomizer, Converter={StaticResource BoolToVisibilityConverter}}" CornerRadius="2">
                        <TextBlock Text="Fun" FontWeight="Bold"/>
                    </Border>
                    <Border 
                        ToolTip="This is considered a lore-friendly option, only changing gameplay"
                        Background="DarkCyan" Padding="4,0" Margin="2,0,0,0" Visibility="{Binding GameplayRandomizer, Converter={StaticResource BoolToVisibilityConverter}}" CornerRadius="2">
                        <TextBlock Text="Gameplay" FontWeight="Bold"/>
                    </Border>
                    <Border 
                        ToolTip="This randomizer can be turned on and off after initial installation using the randomizer control panel"
                        Background="DarkRed" Padding="4,0" Margin="2,0,0,0" Visibility="{Binding IsRuntimeRandomizer, Converter={StaticResource BoolToVisibilityConverter}}" CornerRadius="2">
                        <TextBlock Text="Runtime" FontWeight="Bold"/>
                    </Border>
                    <Border 
                        ToolTip="This randomizer can be turned on and off after initial installation using the randomizer control panel"
                        Background="#AA000000"
                        Padding="4,0" Margin="2,0,0,0" 
                        CornerRadius="2">
                        <TextBlock Text="{Binding Dangerousness, Converter={StaticResource DangerTextConverter}}" Foreground="{Binding Dangerousness, Converter={StaticResource DangerColorConverter}}" FontWeight="Bold"/>
                    </Border>

                </StackPanel>
                <StackPanel Visibility="{Binding HasSliderOption, Converter={StaticResource BoolToVisibilityConverter}}"
                            Margin="20,0,0,0">
                    <TextBlock Text="{Binding TickText}"/>
                    <Slider Value="{Binding SliderValue}" 
                            Style="{StaticResource MahApps.Styles.Slider}"
                            ToolTip="{Binding SliderTooltip}" 
                            Margin="3" Ticks="{Binding Ticks}" 
                            Minimum="{Binding TickMin}"
                            Maximum="{Binding TickMax}"
                            IsSnapToTickEnabled="True" 
                            IsMoveToPointEnabled="True" 
                            TickPlacement="BottomRight"
                            IsEnabled="{Binding OptionIsSelected}"/>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OptionIsSelected}" Value="True">
                                    <Setter Property="Opacity" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <ItemsControl IsEnabled="{Binding OptionIsSelected}"
                              Margin="20,0,0,0" 
                              ItemsSource="{Binding SubOptions}" 
                              ItemTemplate="{DynamicResource RandomizationOptionTemplate}"/>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Background" Value="#00000000"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OptionIsSelected}" Value="True">
                                <Setter Property="Background" Value="#8800BB00"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RandomizationInProgress}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="PulseStoryboard">
                            <Storyboard>
                                <ColorAnimation  
                                    From="#8800BB00"
                                    To="#CC22DD88" 
                                                 Storyboard.TargetName="OptionContainer"
                                                 Storyboard.TargetProperty="(StackPanel.Background).(SolidColorBrush.Color)" 
                                                 Duration="0:0:0.5" RepeatBehavior="Forever" AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="PulseStoryboard" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="CreditTemplate" DataType="classes1:ImageCredit">
            <StackPanel>
                <TextBlock>           
                    <Hyperlink NavigateUri="{Binding Link}" RequestNavigate="Hyperlink_RequestNavigate">
                        <TextBlock FontSize="14" FontWeight="Bold" Text="{Binding Path=Title}"/>
                        <Hyperlink.Resources>
                            <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
                                <Setter Property="Foreground" Value="LimeGreen"/>
                                <Setter Property="TextDecorations" Value="Underline"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Hyperlink.Resources>
                    </Hyperlink>
                </TextBlock>
                <TextBlock Text="{Binding Path=Author}"/>
                <TextBlock Text="{Binding Path=License}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="LibraryCreditTemplate" DataType="classes1:LibraryCredit">
            <StackPanel>
                <TextBlock>           
                    <Hyperlink NavigateUri="{Binding Link}" RequestNavigate="Hyperlink_RequestNavigate">
                        <TextBlock FontSize="14" FontWeight="Bold" Text="{Binding Path=LibraryName}"/>
                        <Hyperlink.Resources>
                            <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
                                <Setter Property="Foreground" Value="LimeGreen"/>
                                <Setter Property="TextDecorations" Value="Underline"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Hyperlink.Resources>
                    </Hyperlink>
                </TextBlock>
                <TextBlock Text="{Binding Path=LibraryPurpose}"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="LogUploaderFlyout" SnapsToDevicePixels="True" IsOpen="{Binding LogUploaderFlyoutOpen}" TitleVisibility="Collapsed" Theme="Accent" CloseButtonVisibility="Collapsed" Position="Bottom" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Controls:MetroWindow}, Path=ActualWidth}" Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Controls:MetroWindow}, Path=ActualHeight}" MouseDown="Flyout_Mousedown" MouseDoubleClick="Flyout_Doubleclick">
                <Border>
                    <Border.Background>
                        <ImageBrush ImageSource="pack://application:,,,/RandomizerUI;component/images/shared/logscreen.jpg" AlignmentY="Center" Stretch="UniformToFill"/>
                    </Border.Background>
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,150">
                        <TextBlock VerticalAlignment="Stretch" SnapsToDevicePixels="True" FontSize="25" FontWeight="Light" HorizontalAlignment="Center" TextAlignment="Center">
                            <fonts:OutlinedTextBlock Text="LOGS &amp; DIAGNOSTICS" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="40" StrokeThickness="4" />
                        </TextBlock>

                        <TextBlock x:Name="LogSelectorHeader" Width="350" HorizontalAlignment="Center" Margin="0,10,0,25" Foreground="Indigo" Text="Select a session log file for upload. In most cases, you will want to use the most recent one. A diagnostic will be included with your upload." FontSize="16" TextWrapping="Wrap" TextAlignment="Center"/>
                        <ComboBox x:Name="Combobox_LogSelector" ItemsSource="{Binding LogsAvailableForUpload}" SelectedItem="{Binding SelectedLogForUpload}"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Margin="5,20,6,0" Content="Cancel" Width="95" HorizontalAlignment="Center" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Controls:ControlsHelper.ContentCharacterCasing="Upper" Command="{Binding CloseLogUICommand}"/>
                            <Button Margin="5,20,6,0" Content="Upload log" Width="95" ToolTip="Uploads log to log parsing server" HorizontalAlignment="Center" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Controls:ControlsHelper.ContentCharacterCasing="Upper" Command="{Binding UploadSelectedLogCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Controls:Flyout>
            <Controls:Flyout x:Name="FirstRunFlyout" SnapsToDevicePixels="True" TitleVisibility="Hidden" Theme="Accent" CloseButtonVisibility="Hidden" Position="Top" Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Controls:MetroWindow}, Path=ActualHeight}" MouseDoubleClick="Flyout_Doubleclick" MouseDown="Flyout_Mousedown" IsOpen="{Binding FirstRunFlyoutOpen}">
                <Border Padding="10">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding FirstRunBackgroundImage}" AlignmentY="Center" Stretch="UniformToFill"/>
                    </Border.Background>
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Vertical" UseLayoutRounding="True" Margin="0,95,0,0" Width="700">
                        <StackPanel Margin="0,0,0,40">
                            <Image Source="masseffectrandomizer.ico" Height="128" Margin="4" ToolTip="Hello!" RenderOptions.BitmapScalingMode="HighQuality"/>
                            <TextBlock Text="{Binding IntroTitleText}" FontSize="30" FontWeight="Light" TextAlignment="Center"/>
                            <TextBlock TextWrapping="Wrap" Text="{Binding IntroTitleSubText}" FontSize="13" TextAlignment="Center"/>
                        </StackPanel>
                        <TextBlock Text="Why do I need a game backup?" Margin="0,10,0,0" FontSize="20"/>
                        <TextBlock FontSize="13">ME3Tweaks tools all use the same game backup, which allows quick restores. While a backup is not required to use this randomizer, it will save you a lot of time, making restores and re-randomization take seconds instead of minutes or hours. Make a backup before modding!</TextBlock>
                        <TextBlock Margin="0,10,0,0" FontSize="20">Does this work with other mods?</TextBlock>
                        <TextBlock FontSize="13">This randomizer should be compatible with most mods, as it modifies existing files. Files that make wide changes to the game may not be compatible, see the NexusMods page for compatibility information. Due to the scope of Randomizer, mod-specific compatibility cannot be guaranteed. A randomization should be installed after all content mods as it will modify installed files.</TextBlock>

                        <TextBlock Text="What languages are supported?" FontSize="20" Margin="0,10,0,0"></TextBlock>
                        <TextBlock Text="Development of this randomizer was done while playing in English. While the randomizer will work on other languages, changes to text and audio added by Randomizer may not work."/>

                        <TextBlock Text="Is this stream-safe?" FontSize="20" Margin="0,10,0,0"></TextBlock>
                        <TextBlock Text="Yes, this randomizer is designed to be stream safe. Options that change music are done with permission and won't get you DMCA'd." FontSize="13"/>

                        <TextBlock  Text="Be sure to read the Frequently Asked Questions (FAQ)" FontSize="20" Margin="0,10,0,0"></TextBlock>
                        <TextBlock  Text="Failure to read the FAQ may lead you to have a bad experience. Read the FAQ by clicking the FAQ button at the bottom of the main window. You can also hover your mouse over items to get more information about them." FontSize="13"/>
                        <StackPanel Orientation="Horizontal">
                            <Button HorizontalAlignment="Left" Margin="48,10,0,0" Click="FAQ_Click">
                                <fonts:OutlinedTextBlock Text="View FAQ" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                            <Button HorizontalAlignment="Left" Margin="5,10,0,0" Click="Button_FirstTimeRunDismiss_Click">
                                <fonts:OutlinedTextBlock Text="Continue" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                        </StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="MaxWidth" Value="600"/>
                                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
                            </Style>
                        </StackPanel.Resources>
                    </StackPanel>
                </Border>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Border Padding="10">
        <Border.Background>
            <ImageBrush Opacity="0.3" ImageSource="{Binding MainWindowBackgroundImage}" AlignmentY="Center" Stretch="UniformToFill" />
        </Border.Background>
        <DockPanel Margin="7" LastChildFill="True">
            <!-- Bottom Panel -->
            <DockPanel DockPanel.Dock="Bottom" LastChildFill="True">
                <StackPanel DockPanel.Dock="Bottom">
                    <StackPanel Visibility="{Binding ShowProgressPanel, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock Name="Textblock_CurrentTask" Text="{Binding CurrentOperationText}" HorizontalAlignment="Center" />
                        <Border Padding="4,4,4,4" Background="#88caaafc" CornerRadius="3">
                            <ProgressBar Name="Progressbar_Bottom" Height="15" Value="{Binding CurrentProgressValue}" IsIndeterminate="{Binding ProgressBarIndeterminate}" Minimum="{Binding ProgressBar_Bottom_Min}" Maximum="{Binding ProgressBar_Bottom_Max}" />
                        </Border>
                    </StackPanel>
                </StackPanel>
                <DockPanel Margin="35,0" IsEnabled="{Binding AllowOptionsChanging}">
                    <GroupBox Header="Presets" DockPanel.Dock="Left">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Grid.Column="0" Margin="0,0,0,5">
                            <Button Content="I want a good laugh" Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}" HorizontalAlignment="Stretch" Click="FunMode_Click"/>
                            <Button Content="I want varied gameplay" Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}" HorizontalAlignment="Stretch" Click="GameplayMode_Click"/>
                            <Button Content="Developer recommended" Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}" HorizontalAlignment="Stretch" Click="Recommended_Click"/>
                            <Button Content="I'll pick my own, thanks" Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}" HorizontalAlignment="Stretch" Click="ClearAll_Click"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="RUN" DockPanel.Dock="Right">
                        <DockPanel>
                            <Button DockPanel.Dock="Bottom" Command="{Binding OptionTogglerCommand}" ToolTip="Turn currently-installed runtime randomizers on or off">
                                <fonts:OutlinedTextBlock Text="Option toggler" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                            <Button  Command="{Binding StartRandomizationCommand}" Margin="0,0,0,5">
                            <fonts:OutlinedTextBlock Text="Run Randomizer" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                        </Button>

                        </DockPanel>

                    </GroupBox>
                    <GroupBox Header="Special options"  DockPanel.Dock="Right">
                        <StackPanel>
                            <!--<CheckBox Content="Re-roll randomization" IsChecked="{Binding PerformReroll}" ToolTip="Checking this box will regenerate the DLC component, as if you performed a new randomization.&#10;Unchecking this box will make randomization occur on top of the existing randomization, effectively stacking your changes.&#10;Some changes can only occur in basegame files and will always stack unless you perform a restore (quick or full)"
                                      Controls:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                                      Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="White"
                                      Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"/>-->
                            <CheckBox Content="Show randomizer labels" IsChecked="{Binding ShowLabels}" 
                                      Margin="0,5,0,0"
                                      ToolTip="Shows category and safety labels on each randomizer"
                                      Controls:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                                      Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="White"
                                      Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Troubleshooting"  DockPanel.Dock="Right">
                        <StackPanel>
                            <Button Click="Logs_Click" MinWidth="20" ToolTip="Generate a diagnostics log for troubleshooting">
                                <fonts:OutlinedTextBlock Text="Logs" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                            <Button Name="BackupRestore_Button" Click="BackupRestore_Click" MinWidth="20" ToolTip="{Binding BackupRestoreToolTip}">
                                <fonts:OutlinedTextBlock Text="{Binding BackupRestoreText, FallbackValue=Backup}" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                            <Button Visibility="{Binding ShowUninstallButton, Converter={StaticResource BoolToVisibilityConverter}}" MinWidth="40" ToolTip="Uninstall the DLC mod component of the randomization. You must repair your game to complete the restore." Command="{Binding UninstallDLCCommand}">
                                <fonts:OutlinedTextBlock Text="Remove randomization" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                            <Button Click="DebugWindow_Click" Visibility="{x:Static randomizerUi:App.IsDebugVisibility}">
                                <fonts:OutlinedTextBlock Text="Debug Tools" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="HELPFUL STUFF"  DockPanel.Dock="Right">
                        <StackPanel>
                            <Button Name="FAQ_Button" Click="FAQ_Click" Margin="5,0,0,0" MinWidth="20" ToolTip="View the Mass Effect Randomizer FAQ">
                                <fonts:OutlinedTextBlock Text="FAQ" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                            <Button Name="Discord_Button" Click="DiscordButton_Click" Margin="5,0,0,0" MinWidth="40" ToolTip="Join the ME3Tweaks Discord server">
                                <StackPanel Orientation="Horizontal">
                                <Image Source="/images/shared/discord.png" Height="16" Width="16" Margin="0,-1,3,0"/>
                                    <fonts:OutlinedTextBlock Text="ME3Tweaks Discord" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                                </StackPanel>
                            </Button>
                            <Button Name="FirstRunShow_Button" Click="FirstRunShowButton_Click" Margin="5,0,0,0" MinWidth="40" ToolTip="Show first run flyout" Visibility="{x:Static randomizerUi:App.IsDebugVisibility}">
                                <fonts:OutlinedTextBlock Text="Show first run" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="12" StrokeThickness="2" />
                            </Button>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Legend"  DockPanel.Dock="Left">
                        <StackPanel>
                            <TextBlock Grid.Row="1" Text="Safe to use" Foreground="#a6ffbe"/>
                            <TextBlock Grid.Row="2" Text="Safe but not 100% tested"/>
                            <TextBlock Grid.Row="3" Text="Mostly safe, may cause a few issues" Foreground="#fff41f"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="Potentially game breaking. Use at your own risk" Foreground="#ff871f"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="RIP. Entertaining, but very likely game breaking" Foreground="#ff1f1f"/>
                        </StackPanel>
                    </GroupBox>

                    <StackPanel Orientation="Vertical" Grid.Column="2" VerticalAlignment="Bottom" IsEnabled="{Binding AllowOptionsChanging}">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5" HorizontalAlignment="Right">
                            <StackPanel>

                            </StackPanel>
                            <TextBlock Text="RNG Seed: " VerticalAlignment="Bottom" Visibility="{Binding UseMultiThreadRNG, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='Inverse'}"/>
                            <TextBox Name="SeedTextBox" MaxLength="11" Text="PLACEHOLDER" ToolTip="RNG seeds determine the output of the random number generator.&#xA;You can share seed values to produce the same results on another run of the program, assuming you chose the same options - however, this is not guaranteed." VerticalAlignment="Bottom"
                                     Visibility="{Binding UseMultiThreadRNG, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='Inverse'}"/>
                        </StackPanel>
                    </StackPanel>
                </DockPanel>
            </DockPanel>
            <TabControl Background="Transparent" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" MaxWidth="1800">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabPanel}">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Randomization options">
                    <DockPanel HorizontalAlignment="Center">
                        <StackPanel Margin="5" DockPanel.Dock="Top" Width="Auto">
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="Select randomization options and then choose Randomize to begin randomization." VerticalAlignment="Top" Visibility="{Binding DirectionsTextVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Name="GameLocationTextbox" VerticalAlignment="Top" Text="{Binding GamePathString}" />
                        </StackPanel>
                        <ScrollViewer>
                            <ItemsControl ItemsSource="{Binding RandomizationGroups}" HorizontalContentAlignment="Center" IsEnabled="{Binding AllowOptionsChanging}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type randomizers:RandomizationGroup}">
                                        <StackPanel Margin="10">
                                            <fonts:OutlinedTextBlock Text="{Binding GroupName}" Fill="#f3fbfe" Stroke="Black" FontFamily="{StaticResource AeroLight}" FontSize="18" StrokeThickness="2" />
                                            <TextBlock TextWrapping="Wrap" MaxWidth="185" Text="{Binding GroupDescription}" HorizontalAlignment="Left" Visibility="{Binding CollapseGroup, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                            <Button Content="Show options" Margin="0,5,0,0" HorizontalAlignment="Left" Visibility="{Binding CollapseGroup, Converter={StaticResource BoolToVisibilityConverter}}" Command="{Binding ShowOptionCommand}"/>
                                            <ItemsControl ItemsSource="{Binding Options}" ItemTemplate="{DynamicResource RandomizationOptionTemplate}" Visibility="{Binding CollapseGroup, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='Not'}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Credits">
                    <TabControl Background="Transparent" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabPanel}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Contributors">
                            <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="1100">
                                <TextBlock DockPanel.Dock="Top" Margin="0,5" Text="The following people helped contribute resources to this project:" TextWrapping="Wrap" TextAlignment="Center"/>
                                <ListBox ItemsSource="{Binding ContributorCredits}" DockPanel.Dock="Top" Background="Transparent" HorizontalContentAlignment="Center">
                                    <ListBox.Resources>
                                        <Style TargetType="ListBox">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Columns="3"/>
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.Resources>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="Control.Background" Value="Transparent"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ListBox>
                                <TextBlock DockPanel.Dock="Top" Margin="0,5" Text="The following libraries are used in this project:" TextWrapping="Wrap" TextAlignment="Center"/>
                                <ListBox ItemsSource="{Binding LibraryCredits}" DockPanel.Dock="Top" Background="Transparent" ItemTemplate="{StaticResource LibraryCreditTemplate}">
                                    <ListBox.Resources>
                                        <Style TargetType="ListBox">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel/>
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.Resources>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="Control.Background" Value="Transparent"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ListBox>
                            </DockPanel>
                        </TabItem>
                        <TabItem Header="Images" Visibility="{Binding ShowImageCredits, Converter={StaticResource BoolToVisibilityConverter}}">
                            <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="1100">
                                <TextBlock DockPanel.Dock="Top" Margin="0,5" Text="Mass Effect 2 Randomizer uses the following images from third party sources. Images that required explicit permission for use may not be reused without their own license." TextWrapping="Wrap" TextAlignment="Center"/>
                                <ListBox ItemsSource="{Binding ImageCredits}" Background="Transparent" ItemTemplate="{StaticResource CreditTemplate}">
                                    <ListBox.Resources>
                                        <Style TargetType="ListBox">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Columns="3"/>
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.Resources>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="Control.Background" Value="Transparent"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ListBox>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                </TabItem>
                <TabItem Header="About">
                    <StackPanel HorizontalAlignment="Stretch">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="84" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="130" />
                                <ColumnDefinition Width="35*" />
                            </Grid.ColumnDefinitions>
                            <Image Source="masseffectrandomizer.ico" Grid.Row="0" Grid.Column="0" Margin="4" ToolTip="Hello!" RenderOptions.BitmapScalingMode="HighQuality"/>
                            <StackPanel Grid.Column="1" Grid.Row="0" Margin="0,3,0,0">
                                <TextBlock HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20" Text="{Binding RandomizerName}" FontWeight="Light" />
                                <TextBlock x:Name="TextBlock_AssemblyVersion" HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="15" FontWeight="Light" Text="Version" />
                                <Image HorizontalAlignment="Left" Height="32" VerticalAlignment="Top" Source="images/me3tweaks.png" Margin="8,0,0,0" Cursor="Hand" MouseDown="Image_ME3Tweaks_Click" ToolTip="Software developed with love by ME3Tweaks" RenderOptions.BitmapScalingMode="HighQuality" />
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,3,0,0">
                                <TextBlock Text="{Binding CopyrightString}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Border>

</Controls:MetroWindow>